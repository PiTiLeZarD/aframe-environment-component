{"mappings":"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IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IACvG,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IACtG,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GACxG,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GACzG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EACxG,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EACvG,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,IACvG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,IAAK,GAAI,GAAI,GACzG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,I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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GACxG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GACtG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GA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","sources":["src/PerlinNoise.ts","src/presets/default.js","src/presets/index.js","src/presets/contact.js","src/presets/egypt.js","src/presets/checkerboard.js","src/presets/forest.js","src/presets/goaland.js","src/presets/yavapai.js","src/presets/goldmine.js","src/presets/threetowers.js","src/presets/poison.js","src/presets/arches.js","src/presets/tron.js","src/presets/japan.js","src/presets/dream.js","src/presets/volcano.js","src/presets/starry.js","src/presets/osiris.js","src/presets/moon.js","src/assets/index.js","src/assets/arches.js","src/assets/stones.js","src/assets/torii.js","src/assets/hexagons.js","src/assets/towers.js","src/assets/trees.js","src/assets/apparatus.js","src/assets/mushrooms.js","src/ground.js","src/sky.js","src/stars.js","src/dressing.js","src/grid.js","src/hemilight.js","src/sunlight.js","src/environment.js","src/skyshader.js","src/gradientshader.js","src/index.js"],"sourcesContent":["// perlin noise generator\n// from https://gist.github.com/banksean/304522\n\nconst dot = (g: number[], x: number, y: number, z: number) => g[0] * x + g[1] * y + g[2] * z;\nconst mix = (a: number, b: number, t: number) => (1.0 - t) * a + t * b;\nconst fade = (t: number) => t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\nconst random = (seed: number, max: number) =>\n    parseFloat(\n        \"0.\" +\n            Math.sin(seed * 9999 * max)\n                .toString()\n                .substring(7)\n    );\n\nconst seed = (seed: number) => {\n    const grad3 = [\n        [1, 1, 0],\n        [-1, 1, 0],\n        [1, -1, 0],\n        [-1, -1, 0],\n        [1, 0, 1],\n        [-1, 0, 1],\n        [1, 0, -1],\n        [-1, 0, -1],\n        [0, 1, 1],\n        [0, -1, 1],\n        [0, 1, -1],\n        [0, -1, -1],\n    ];\n\n    const p = new Array(256).fill(null).map((_, i) => Math.floor(256 * random(seed, i)));\n\n    // To remove the need for index wrapping, double the permutation table length\n    const perm = [...p, ...p];\n    return { grad3, perm };\n};\n\nconst noise = ({ grad3, perm }, x: number, y: number, z: number) => {\n    // Find unit grid cell containing point\n    let X = Math.floor(x);\n    let Y = Math.floor(y);\n    let Z = Math.floor(z);\n\n    // Get relative xyz coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    z = z - Z;\n\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n    Z = Z & 255;\n\n    // Calculate a set of eight hashed gradient indices\n    const gi000 = perm[X + perm[Y + perm[Z]]] % 12;\n    const gi001 = perm[X + perm[Y + perm[Z + 1]]] % 12;\n    const gi010 = perm[X + perm[Y + 1 + perm[Z]]] % 12;\n    const gi011 = perm[X + perm[Y + 1 + perm[Z + 1]]] % 12;\n    const gi100 = perm[X + 1 + perm[Y + perm[Z]]] % 12;\n    const gi101 = perm[X + 1 + perm[Y + perm[Z + 1]]] % 12;\n    const gi110 = perm[X + 1 + perm[Y + 1 + perm[Z]]] % 12;\n    const gi111 = perm[X + 1 + perm[Y + 1 + perm[Z + 1]]] % 12;\n\n    // The gradients of each corner are now:\n    // g000 = grad3[gi000];\n    // g001 = grad3[gi001];\n    // g010 = grad3[gi010];\n    // g011 = grad3[gi011];\n    // g100 = grad3[gi100];\n    // g101 = grad3[gi101];\n    // g110 = grad3[gi110];\n    // g111 = grad3[gi111];\n    // Calculate noise contributions from each of the eight corners\n    const n000 = dot(grad3[gi000], x, y, z);\n    const n100 = dot(grad3[gi100], x - 1, y, z);\n    const n010 = dot(grad3[gi010], x, y - 1, z);\n    const n110 = dot(grad3[gi110], x - 1, y - 1, z);\n    const n001 = dot(grad3[gi001], x, y, z - 1);\n    const n101 = dot(grad3[gi101], x - 1, y, z - 1);\n    const n011 = dot(grad3[gi011], x, y - 1, z - 1);\n    const n111 = dot(grad3[gi111], x - 1, y - 1, z - 1);\n    // Compute the fade curve value for each of x, y, z\n    const u = fade(x);\n    const v = fade(y);\n    const w = fade(z);\n    // Interpolate along x the contributions from each of the corners\n    const nx00 = mix(n000, n100, u);\n    const nx01 = mix(n001, n101, u);\n    const nx10 = mix(n010, n110, u);\n    const nx11 = mix(n011, n111, u);\n    // Interpolate the four results along y\n    const nxy0 = mix(nx00, nx10, v);\n    const nxy1 = mix(nx01, nx11, v);\n    // Interpolate the two last results along z\n    const nxyz = mix(nxy0, nxy1, w);\n\n    return nxyz;\n};\n\nexport { seed, dot, mix, fade, noise, random };\n","export default {\n    active: true,\n    seed: 1,\n    skyType: \"atmosphere\",\n    skyColor: \"#88c\",\n    horizonColor: \"#ddd\",\n    lighting: \"distant\",\n    lightPosition: { x: -0.11, y: 1, z: 0.33 },\n    fog: 0.78,\n    flatShading: false,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 3,\n    groundTexture: \"checkerboard\",\n    groundColor: \"#454545\",\n    groundColor2: \"#5d5d5d\",\n    dressing: \"none\",\n    dressingAmount: 10,\n    dressingColor: \"#795449\",\n    dressingScale: 1,\n    dressingVariance: { x: 0, y: 0, z: 0 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"none\",\n    gridColor: \"#ccc\",\n    shadow: false,\n};\n","import defaultPreset from \"./default\";\nimport contactPreset from \"./contact\";\nimport egyptPreset from \"./egypt\";\nimport checkerboardPreset from \"./checkerboard\";\nimport forestPreset from \"./forest\";\nimport goalandPreset from \"./goaland\";\nimport yavapaiPreset from \"./yavapai\";\nimport goldminePreset from \"./goldmine\";\nimport threetowersPreset from \"./threetowers\";\nimport poisonPreset from \"./poison\";\nimport archesPreset from \"./arches\";\nimport tronPreset from \"./tron\";\nimport japanPreset from \"./japan\";\nimport dreamPreset from \"./dream\";\nimport volcanoPreset from \"./volcano\";\nimport starryPreset from \"./starry\";\nimport osirisPreset from \"./osiris\";\nimport moonPreset from \"./moon\";\n\nexport default {\n    none: {},\n    default: defaultPreset,\n    contact: contactPreset,\n    egypt: egyptPreset,\n    checkerboard: checkerboardPreset,\n    forest: forestPreset,\n    goaland: goalandPreset,\n    yavapai: yavapaiPreset,\n    goldmine: goldminePreset,\n    threetowers: threetowersPreset,\n    poison: poisonPreset,\n    arches: archesPreset,\n    tron: tronPreset,\n    japan: japanPreset,\n    dream: dreamPreset,\n    volcano: volcanoPreset,\n    starry: starryPreset,\n    osiris: osirisPreset,\n    moon: moonPreset,\n    schema: {\n        default: \"default\",\n        oneOf: [\n            \"none\",\n            \"default\",\n            \"contact\",\n            \"egypt\",\n            \"checkerboard\",\n            \"forest\",\n            \"goaland\",\n            \"yavapai\",\n            \"goldmine\",\n            \"arches\",\n            \"threetowers\",\n            \"poison\",\n            \"tron\",\n            \"japan\",\n            \"dream\",\n            \"volcano\",\n            \"starry\",\n            \"osiris\",\n        ],\n    },\n};\n","export default {\n    active: true,\n    seed: 14,\n    skyType: \"gradient\",\n    skyColor: \"#478d54\",\n    horizonColor: \"#b696cb\",\n    lighting: \"distant\",\n    lightPosition: { x: 0, y: 2.01, z: -1 },\n    fog: 0.8,\n    flatShading: false,\n    playArea: 1,\n    ground: \"spikes\",\n    groundYScale: 4.91,\n    groundTexture: \"none\",\n    groundColor: \"#2e455f\",\n    groundColor2: \"#694439\",\n    dressing: \"apparatus\",\n    dressingAmount: 7,\n    dressingColor: \"#657067\",\n    dressingScale: 20,\n    dressingVariance: { x: 20, y: 20, z: 20 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"1x1\",\n    gridColor: \"#478d54\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 26,\n    skyType: \"gradient\",\n    skyColor: \"#1b7660\",\n    horizonColor: \"#e4b676\",\n    lighting: \"distant\",\n    lightPosition: { x: 0, y: 1.65, z: -1 },\n    fog: 0.75,\n    flatShading: false,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 5,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#664735\",\n    groundColor2: \"#6c4b39\",\n    dressing: \"pyramids\",\n    dressingAmount: 10,\n    dressingColor: \"#7c5c45\",\n    dressingScale: 5,\n    dressingVariance: { x: 20, y: 20, z: 20 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"spots\",\n    gridColor: \"#e4b676\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 1,\n    skyType: \"gradient\",\n    skyColor: \"#0d0d0d\",\n    horizonColor: \"#404040\",\n    lighting: \"distant\",\n    lightPosition: { x: 0, y: 1, z: -0.2 },\n    fog: 0.81,\n    flatShading: true,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 4.81,\n    groundTexture: \"checkerboard\",\n    groundColor: \"#252525\",\n    groundColor2: \"#111111\",\n    dressing: \"cubes\",\n    dressingAmount: 10,\n    dressingColor: \"#9f9f9f\",\n    dressingScale: 1.51,\n    dressingVariance: { x: 5, y: 20, z: 5 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"dots\",\n    gridColor: \"#ccc\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 8,\n    skyType: \"gradient\",\n    skyColor: \"#24b59f\",\n    horizonColor: \"#eff9b7\",\n    lighting: \"distant\",\n    lightPosition: { x: -1.2, y: 0.88, z: -0.55 },\n    fog: 0.8,\n    flatShading: false,\n    playArea: 1,\n    ground: \"noise\",\n    groundYScale: 4.18,\n    groundTexture: \"squares\",\n    groundColor: \"#937a24\",\n    groundColor2: \"#987d2e\",\n    dressing: \"trees\",\n    dressingAmount: 500,\n    dressingColor: \"#888b1d\",\n    dressingScale: 1,\n    dressingVariance: { x: 10, y: 10, z: 10 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"none\",\n    gridColor: \"#c5a543\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 17,\n    skyType: \"gradient\",\n    skyColor: \"#14645f\",\n    horizonColor: \"#a3dab8\",\n    lighting: \"point\",\n    lightPosition: { x: 0.1, y: 4, z: 0.56 },\n    fog: 0.73,\n    flatShading: false,\n    playArea: 1,\n    ground: \"noise\",\n    groundYScale: 0.81,\n    groundTexture: \"none\",\n    groundColor: \"#ae3241\",\n    groundColor2: \"#db4453\",\n    dressing: \"mushrooms\",\n    dressingAmount: 150,\n    dressingColor: \"#a9313d\",\n    dressingScale: 5,\n    dressingVariance: { x: 5, y: 10, z: 5 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"dots\",\n    gridColor: \"#239893\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 11,\n    skyType: \"gradient\",\n    skyColor: \"#239849\",\n    horizonColor: \"#cfe0af\",\n    lighting: \"distant\",\n    lightPosition: { x: 0.5, y: 1, z: 0 },\n    fog: 0.8,\n    flatShading: true,\n    playArea: 1,\n    ground: \"canyon\",\n    groundYScale: 9.76,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#C66344\",\n    groundColor2: \"#c96b4b\",\n    dressing: \"stones\",\n    dressingAmount: 500,\n    dressingColor: \"#C66344\",\n    dressingScale: 0.06,\n    dressingVariance: { x: 0.2, y: 0.1, z: 0.2 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 1,\n    grid: \"none\",\n    gridColor: \"#239893\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 53,\n    skyType: \"gradient\",\n    skyColor: \"#1e1c1a\",\n    horizonColor: \"#8c7964\",\n    lighting: \"point\",\n    lightPosition: { x: -0.09, y: 3, z: 0.33 },\n    fog: 0.43,\n    flatShading: true,\n    playArea: 1.08,\n    ground: \"canyon\",\n    groundYScale: 50,\n    groundTexture: \"none\",\n    groundColor: \"#353535\",\n    groundColor2: \"#454545\",\n    dressing: \"hexagons\",\n    dressingAmount: 300,\n    dressingColor: \"#fe921b\",\n    dressingScale: 0.5,\n    dressingVariance: { x: 2, y: 8, z: 2 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0.03,\n    grid: \"none\",\n    gridColor: \"#ccc\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 5,\n    skyType: \"gradient\",\n    skyColor: \"#23a06b\",\n    horizonColor: \"#f5e170\",\n    lighting: \"distant\",\n    lightPosition: { x: 0.5, y: 1, z: 0 },\n    fog: 0.8,\n    flatShading: false,\n    playArea: 1,\n    ground: \"spikes\",\n    groundYScale: 4.26,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#273a49\",\n    groundColor2: \"#2b464f\",\n    dressing: \"towers\",\n    dressingAmount: 3,\n    dressingColor: \"#5f6d94\",\n    dressingScale: 50,\n    dressingVariance: { x: 10, y: 100, z: 10 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"none\",\n    gridColor: \"#239893\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 92,\n    skyType: \"gradient\",\n    skyColor: \"#1ea84a\",\n    horizonColor: \"#177132\",\n    lighting: \"distant\",\n    lightPosition: { x: 0.5, y: 1, z: 0 },\n    fog: 0.8,\n    flatShading: false,\n    playArea: 1,\n    ground: \"canyon\",\n    groundYScale: 9.76,\n    groundTexture: \"none\",\n    groundColor: \"#851f31\",\n    groundColor2: \"#912235\",\n    dressing: \"hexagons\",\n    dressingAmount: 20,\n    dressingColor: \"#c7415b\",\n    dressingScale: 20,\n    dressingVariance: { x: 20, y: 200, z: 20 },\n    dressingUniformScale: false,\n    dressingOnPlayArea: 0,\n    grid: \"crosses\",\n    gridColor: \"#1ea84a\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 19,\n    skyType: \"atmosphere\",\n    skyColor: \"#8cbdc8\",\n    horizonColor: \"#ddd\",\n    lighting: \"distant\",\n    lightPosition: { x: -0.11, y: 0.16, z: 0.33 },\n    fog: 0.67,\n    flatShading: true,\n    playArea: 1,\n    ground: \"canyon\",\n    groundYScale: 10,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#a87d6f\",\n    groundColor2: \"#795449\",\n    dressing: \"arches\",\n    dressingAmount: 6,\n    dressingColor: \"#795449\",\n    dressingScale: 26,\n    dressingVariance: { x: 20, y: 40, z: 20 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0.04,\n    grid: \"none\",\n    gridColor: \"#ccc\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 14,\n    skyType: \"gradient\",\n    skyColor: \"#091b39\",\n    horizonColor: \"#284a9e\",\n    lighting: \"distant\",\n    lightPosition: { x: -0.72, y: 0.62, z: 0.4 },\n    fog: 0.8,\n    flatShading: false,\n    playArea: 1,\n    ground: \"spikes\",\n    groundYScale: 4.91,\n    groundTexture: \"none\",\n    groundColor: \"#061123\",\n    groundColor2: \"#694439\",\n    dressing: \"towers\",\n    dressingAmount: 5,\n    dressingColor: \"#fb000e\",\n    dressingScale: 15,\n    dressingVariance: { x: 20, y: 20, z: 20 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"1x1\",\n    gridColor: \"#fb000e\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 14,\n    skyType: \"gradient\",\n    skyColor: \"#7e5db5\",\n    horizonColor: \"#b4adda\",\n    lighting: \"distant\",\n    lightPosition: { x: 1.33, y: 1, z: 0.24 },\n    fog: 0.9,\n    flatShading: false,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 25,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#7e5db5\",\n    groundColor2: \"#cabdf5\",\n    dressing: \"torii\",\n    dressingAmount: 4,\n    dressingColor: \"#bc5e7c\",\n    dressingScale: 15,\n    dressingVariance: { x: 0, y: 0, z: 0 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 0,\n    grid: \"spots\",\n    gridColor: \"#e4b676\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 17,\n    skyType: \"gradient\",\n    skyColor: \"#87faf4\",\n    horizonColor: \"#b34093\",\n    lighting: \"distant\",\n    lightPosition: { x: -0.72, y: 0.53, z: 0.97 },\n    fog: 0.8,\n    flatShading: false,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 20,\n    groundTexture: \"checkerboard\",\n    groundColor: \"#b34093\",\n    groundColor2: \"#c050a2\",\n    dressing: \"mushrooms\",\n    dressingAmount: 300,\n    dressingColor: \"#3cf7ed\",\n    dressingScale: 0.2,\n    dressingVariance: { x: 0.2, y: 0.2, z: 0.2 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 1,\n    grid: \"none\",\n    gridColor: \"#239893\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 92,\n    skyType: \"gradient\",\n    skyColor: \"#4a070f\",\n    horizonColor: \"#f62300\",\n    lighting: \"point\",\n    lightPosition: { x: 0.5, y: 2.25, z: 0 },\n    fog: 0.87,\n    flatShading: false,\n    playArea: 1,\n    ground: \"canyon\",\n    groundYScale: 9.76,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#fb0803\",\n    groundColor2: \"#510000\",\n    dressing: \"arches\",\n    dressingAmount: 15,\n    dressingColor: \"#fb0803\",\n    dressingScale: 3,\n    dressingVariance: { x: 10, y: 100, z: 10 },\n    dressingUniformScale: false,\n    dressingOnPlayArea: 0.2,\n    grid: \"none\",\n    gridColor: \"#fa0e00\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 1,\n    skyType: \"atmosphere\",\n    skyColor: \"#88c\",\n    horizonColor: \"#ddd\",\n    lighting: \"distant\",\n    lightPosition: { x: 0, y: -0.01, z: -0.46 },\n    fog: 0.7,\n    flatShading: false,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 3,\n    groundTexture: \"none\",\n    groundColor: \"#553e35\",\n    groundColor2: \"#694439\",\n    dressing: \"none\",\n    dressingAmount: 100,\n    dressingColor: \"#795449\",\n    dressingScale: 5,\n    dressingVariance: { x: 1, y: 1, z: 1 },\n    dressingUniformScale: true,\n    grid: \"1x1\",\n    dressingOnPlayArea: 0,\n    gridColor: \"#39d2f2\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 46,\n    skyType: \"atmosphere\",\n    skyColor: \"#88c\",\n    horizonColor: \"#ddd\",\n    lighting: \"distant\",\n    lightPosition: { x: 0, y: 0.02, z: -0.46 },\n    fog: 0,\n    flatShading: false,\n    playArea: 1,\n    ground: \"hills\",\n    groundYScale: 3,\n    groundTexture: \"none\",\n    groundColor: \"#9e7b47\",\n    groundColor2: \"#9e7b47\",\n    dressing: \"pyramids\",\n    dressingAmount: 7,\n    dressingColor: \"#9e7b47\",\n    dressingScale: 5,\n    dressingVariance: { x: 30, y: 30, z: 30 },\n    dressingUniformScale: true,\n    grid: \"dots\",\n    dressingOnPlayArea: 0,\n    gridColor: \"#daa452\",\n    shadow: false,\n};\n","export default {\n    active: true,\n    seed: 11,\n    skyType: \"gradient\",\n    skyColor: \"#000000\",\n    horizonColor: \"#000000\",\n    lighting: \"distant\",\n    lightPosition: { x: 0.5, y: 1, z: 0 },\n    fog: 0.8,\n    flatShading: true,\n    playArea: 1,\n    ground: \"canyon\",\n    groundYScale: 9.76,\n    groundTexture: \"walkernoise\",\n    groundColor: \"#D1D1D1\",\n    groundColor2: \"#494949\",\n    dressing: \"stones\",\n    dressingAmount: 500,\n    dressingColor: \"#494949\",\n    dressingScale: 0.06,\n    dressingVariance: { x: 0.2, y: 0.1, z: 0.2 },\n    dressingUniformScale: true,\n    dressingOnPlayArea: 1,\n    grid: \"none\",\n    gridColor: \"#239893\",\n    shadow: false,\n};\n","import arches from \"./arches\";\nimport stones from \"./stones\";\nimport torii from \"./torii\";\nimport hexagons from \"./hexagons\";\nimport towers from \"./towers\";\nimport trees from \"./trees\";\nimport apparatus from \"./apparatus\";\nimport mushrooms from \"./mushrooms\";\n\n// scale down dressing meshes (coordinates were saved in integers for better compression)\nconst scaleDown = (asset) =>\n    asset.map((geometry) =>\n        geometry.type == \"mesh\" ? { ...geometry, vertices: geometry.vertices.map((v) => v / 1000.0) } : geometry\n    );\n\nexport default {\n    arches: scaleDown(arches),\n    stones: scaleDown(stones),\n    torii: scaleDown(torii),\n    hexagons: scaleDown(hexagons),\n    towers: scaleDown(towers),\n    trees: scaleDown(trees),\n    apparatus: scaleDown(apparatus),\n    mushrooms: scaleDown(mushrooms),\n};\n","export default [\n    {\n        type: \"mesh\",\n        vertices: [\n            409, 268, 4, 351, 228, 36, 336, 236, -57, -152, 391, 69, -135, 358, 88, -119, 330, 43, -20, 358, -35, -153,\n            357, -47, 37, 413, -26, -20, 411, -14, -302, 148, 154, -339, 121, -126, -389, 200, -88, -477, 193, -76,\n            -314, 346, -19, -314, 306, -30, -250, 296, -73, -267, 237, -82, -212, 303, -68, -245, 200, -67, -223, 304,\n            108, -329, 299, 107, -289, 350, 76, -320, 342, 69, 119, 373, -39, 38, 370, 8, 113, 367, 52, 492, 202, -31,\n            462, 83, -104, 447, 71, -80, 426, 112, 25, 482, 189, -7, 222, 372, 6, 121, 402, 41, 87, 382, 67, 221, 346,\n            55, 559, 93, -13, 528, 47, 39, 505, 21, -111, 528, 54, -101, 616, 31, -53, 442, 256, -15, 300, 338, 19, 257,\n            308, -79, 408, 256, -74, 312, 352, -26, 384, 297, -31, 437, 257, -47, -29, 415, 53, -232, 377, 59, -139,\n            335, 77, -132, 344, 2, -18, 377, -37, -171, 387, -28, -254, 384, 18, -651, -27, 27, -435, -28, 179, -345,\n            149, 165, -272, -28, 23, -215, 146, -2, -279, -29, -59, -211, 145, -55, -337, -28, -128, -413, 247, 0, -293,\n            363, 24, -214, 254, -36, -164, 290, 33, -284, 150, 94, -218, 362, 105, 75, 369, 29, 518, 147, -63, 447, 190,\n            -70, 445, 56, -105, 391, 185, -60, 431, 49, -33, 459, 83, 26, 470, 162, 42, 130, 390, 53, 167, 341, -30,\n            125, 394, -45, 239, 368, -17, 91, 414, 10, 450, 18, 2, 449, -27, -9, 436, -28, -58, 496, -27, -110, 582,\n            -28, -140, 647, -27, -56, 325, 325, -45, -307, 297, -56, -647, -28, -45, -188, 310, -54, -264, 197, 113,\n            -367, 175, 139, 8, 387, 82, 426, 45, -55, 114, 359, -28, 500, 27, 44, 461, -29, 13, -512, -27, -151, -152,\n            376, -38, -490, -28, 148, 12, 370, -28, 442, 160, 42, 465, 194, 32, 381, 183, -33, 649, -27, -34, 444, 16,\n            29, 616, -28, 25, 417, 267, -66, -132, 352, -34, -322, -27, 130, -271, 86, -115, -635, -28, -121, -291, 203,\n            -99, 176, 405, -10, 561, 52, -93, 371, 305, 9, 311, 237, -22, 377, 200, -81, -129, 406, 46, -154, 371, 99,\n            -82, 361, 71, -21, 354, 26, -91, 363, -27, -165, 413, -12, -414, 215, 110, -238, 127, 26, -408, -28, -128,\n            -674, -28, -94, -446, 232, -39, -311, 226, -90, -255, 210, -61, -235, 192, -11, -217, 218, 58, -269, 299,\n            124, -386, 276, 78, -399, 281, 42, 15, 373, 58, 16, 393, 75, 549, 107, -46, 481, 188, -68, 409, 120, -41,\n            541, 81, 12, 230, 368, 41, 194, 350, -50, 224, 361, -50, 604, -28, -10, 602, -27, 35, 486, 56, -121, 502,\n            69, -120, 457, -27, -110, 226, 317, -40, -584, -28, -124, 439, -26, -30, 467, -26, 39, 547, -27, -146, 21,\n            368, 14, 466, 229, -29, 578, -27, 44, 609, -27, -96, 291, 356, -15, 290, 306, 34, 255, 321, 28, 231, 311,\n            -5, -251, 386, 50, -183, 307, 87, -152, 307, 24, -264, 373, -12, -392, -27, 190, -333, -28, 84, -281, -27,\n            54, -270, -28, -23, -308, -28, -101, -687, -27, -59, 39, 418, 39, 413, 163, 25, 404, 206, -90, 54, 400, -31,\n            121, 352, 8, -454, 41, 148, -426, 9, 182, -564, 115, 3, -427, 27, -107, -548, 118, -32, -556, 122, -53,\n            -517, 91, -101, -475, 54, 140, -461, 52, -134, -558, 119, -71, -434, 286, 59, -687, -31, 52, -595, 146, 22,\n            -670, -28, 164, -537, 166, 122, -575, -28, 217, -566, 159, 65, -470, 152, 136, -712, -29, 102, -639, -29,\n            211, -532, -30, 181, -442, -30, -100,\n        ],\n        faces: [\n            76, 104, 162, 1, 176, 103, 103, 76, 1, 2, 119, 73, 73, 105, 2, 2, 118, 152, 45, 161, 46, 46, 109, 45, 3,\n            120, 49, 49, 68, 3, 3, 121, 139, 139, 48, 3, 4, 122, 94, 94, 121, 4, 6, 123, 124, 9, 175, 81, 10, 169, 111,\n            10, 67, 92, 88, 43, 146, 11, 131, 114, 11, 128, 183, 13, 130, 15, 90, 184, 174, 90, 182, 184, 130, 184, 63,\n            14, 130, 63, 15, 130, 14, 16, 131, 12, 15, 168, 53, 18, 91, 17, 131, 16, 17, 65, 133, 132, 65, 132, 91, 67,\n            134, 166, 166, 92, 67, 20, 135, 92, 20, 166, 4, 4, 121, 20, 22, 135, 68, 25, 102, 96, 25, 157, 102, 69, 138,\n            157, 69, 157, 25, 39, 150, 71, 71, 141, 39, 28, 150, 149, 149, 72, 28, 142, 176, 105, 36, 140, 27, 27, 143,\n            36, 32, 115, 81, 32, 144, 161, 161, 80, 32, 77, 35, 144, 34, 26, 77, 78, 179, 96, 145, 152, 78, 178, 79,\n            145, 80, 146, 79, 147, 140, 36, 143, 108, 36, 143, 37, 148, 74, 95, 154, 154, 83, 74, 72, 149, 151, 151, 95,\n            72, 38, 150, 156, 40, 147, 106, 70, 140, 40, 40, 116, 70, 42, 162, 0, 35, 163, 162, 43, 145, 146, 46, 117,\n            41, 47, 158, 27, 48, 139, 175, 122, 138, 94, 157, 138, 123, 52, 178, 102, 52, 102, 6, 52, 124, 7, 7, 100,\n            52, 53, 125, 8, 57, 93, 181, 56, 169, 181, 59, 127, 58, 60, 173, 61, 62, 128, 11, 11, 112, 62, 65, 91, 167,\n            65, 167, 66, 126, 93, 21, 22, 68, 49, 72, 95, 29, 142, 29, 74, 74, 82, 142, 75, 107, 97, 75, 97, 103, 76,\n            97, 37, 104, 143, 31, 78, 152, 164, 78, 164, 179, 79, 178, 8, 97, 155, 159, 107, 98, 155, 83, 98, 82, 154,\n            95, 84, 39, 116, 86, 86, 156, 39, 87, 160, 116, 24, 145, 96, 162, 104, 0, 105, 118, 2, 43, 177, 119, 44,\n            177, 43, 91, 51, 167, 44, 88, 109, 46, 161, 117, 3, 68, 121, 3, 48, 120, 4, 166, 50, 50, 122, 4, 5, 123,\n            122, 123, 138, 122, 110, 124, 51, 170, 10, 111, 110, 91, 7, 7, 124, 110, 8, 125, 9, 9, 81, 8, 186, 12, 188,\n            92, 135, 10, 11, 114, 112, 64, 63, 137, 13, 15, 89, 89, 53, 100, 64, 168, 14, 14, 168, 15, 89, 100, 16, 16,\n            12, 89, 100, 18, 16, 17, 91, 132, 112, 19, 61, 18, 7, 91, 19, 17, 132, 133, 127, 59, 133, 59, 61, 136, 21,\n            22, 134, 127, 133, 20, 92, 166, 121, 135, 20, 158, 31, 27, 21, 135, 22, 23, 137, 136, 24, 102, 178, 178,\n            145, 24, 25, 179, 69, 26, 94, 138, 27, 140, 70, 27, 70, 141, 150, 177, 71, 28, 177, 150, 29, 142, 73, 73,\n            119, 29, 142, 82, 30, 30, 176, 142, 107, 75, 82, 31, 143, 27, 33, 81, 175, 31, 41, 104, 115, 79, 8, 32, 33,\n            144, 80, 115, 32, 33, 175, 139, 35, 162, 42, 77, 139, 34, 163, 26, 179, 163, 179, 164, 78, 96, 145, 177, 29,\n            119, 108, 143, 148, 148, 37, 159, 97, 159, 37, 74, 83, 82, 38, 149, 150, 156, 150, 39, 40, 106, 87, 87, 116,\n            40, 140, 147, 40, 161, 144, 42, 42, 117, 161, 41, 0, 104, 41, 117, 0, 0, 117, 42, 164, 118, 163, 1, 163,\n            118, 118, 176, 1, 118, 105, 176, 152, 118, 164, 43, 152, 145, 43, 119, 2, 71, 109, 141, 47, 41, 158, 44, 71,\n            177, 45, 109, 88, 45, 88, 146, 46, 47, 109, 141, 47, 27, 167, 50, 166, 49, 120, 165, 139, 121, 94, 5, 122,\n            50, 123, 51, 124, 157, 6, 102, 157, 123, 6, 100, 8, 178, 5, 167, 51, 6, 124, 52, 100, 178, 52, 53, 168, 125,\n            125, 165, 120, 54, 125, 168, 9, 48, 175, 120, 9, 125, 93, 10, 135, 181, 101, 56, 57, 169, 10, 59, 172, 61,\n            67, 170, 171, 67, 171, 127, 58, 127, 171, 129, 186, 113, 60, 61, 172, 61, 173, 112, 62, 112, 173, 174, 189,\n            129, 165, 64, 23, 64, 137, 23, 165, 22, 49, 64, 54, 168, 17, 114, 131, 17, 112, 114, 66, 133, 65, 19, 132,\n            133, 19, 133, 61, 134, 133, 66, 166, 134, 66, 166, 66, 167, 93, 135, 21, 68, 135, 121, 23, 136, 22, 94, 34,\n            139, 25, 96, 179, 26, 138, 69, 69, 179, 26, 30, 103, 176, 116, 141, 70, 39, 141, 116, 73, 142, 105, 143, 76,\n            37, 26, 35, 77, 103, 97, 76, 77, 144, 33, 33, 139, 77, 38, 151, 149, 80, 161, 45, 80, 45, 146, 81, 115, 8,\n            107, 155, 97, 82, 98, 107, 95, 151, 84, 38, 156, 85, 86, 116, 160, 96, 102, 24, 72, 29, 28, 29, 95, 74, 75,\n            30, 82, 108, 147, 36, 88, 44, 43, 91, 110, 51, 170, 67, 10, 11, 183, 131, 64, 14, 63, 89, 15, 53, 100, 7,\n            18, 112, 17, 19, 127, 134, 67, 136, 126, 21, 158, 41, 31, 33, 32, 81, 115, 80, 79, 177, 28, 29, 43, 2, 152,\n            71, 44, 109, 47, 46, 41, 141, 109, 47, 167, 5, 50, 123, 5, 51, 100, 53, 8, 125, 54, 165, 9, 120, 48, 93, 57,\n            10, 59, 58, 172, 174, 185, 189, 165, 54, 64, 165, 23, 22, 94, 26, 34, 30, 75, 103, 143, 104, 76, 26, 163,\n            35, 38, 85, 151, 192, 182, 191, 183, 128, 201, 12, 13, 89, 181, 169, 57, 186, 153, 113, 188, 183, 99, 184,\n            182, 63, 185, 13, 189, 180, 181, 93, 186, 99, 153, 189, 186, 129, 185, 184, 130, 186, 13, 12, 187, 93, 126,\n            193, 199, 194, 194, 196, 193, 200, 187, 195, 187, 197, 195, 187, 126, 197, 197, 190, 194, 190, 136, 137,\n            190, 196, 194, 63, 182, 192, 63, 192, 196, 192, 198, 196, 191, 182, 55, 193, 196, 198, 194, 199, 197, 195,\n            197, 199, 136, 197, 126, 190, 137, 63, 190, 63, 196, 197, 136, 190, 192, 191, 198, 201, 99, 183, 90, 55,\n            182, 181, 180, 101, 185, 130, 13, 186, 188, 99, 186, 189, 13, 187, 180, 93, 200, 101, 187, 183, 188, 131,\n            184, 185, 174, 180, 187, 101, 16, 18, 17, 12, 131, 188, 35, 42, 144, 163, 1, 162, 76, 162, 1, 79, 146, 145,\n        ],\n    },\n];\n","export default [\n    {\n        type: \"mesh\",\n        vertices: [\n            -376, 189, 42, 230, 223, -310, 353, 162, -62, 414, -23, -67, 256, 90, -475, 24, 85, -526, -418, -16, 57,\n            -432, 66, -40, -199, 151, -376, -155, 49, 467, -91, 289, 201, 293, 197, 91, 81, -17, -480, 42, 108, 431,\n            -359, -17, -250, 383, -19, -243, 194, -15, 270, -272, 180, 293, -86, 212, 262, 234, 54, 297, 395, 97, -302,\n            -123, -21, -444, -416, -19, -123, -323, -18, 267, -100, -16, 429, -300, 96, -361, 163, -19, 409, 118, 201,\n            -431, -241, -18, 391, -130, 274, -309, 306, -19, -399, -221, 96, 404,\n        ],\n        faces: [\n            31, 18, 17, 0, 17, 18, 3, 20, 2, 18, 11, 10, 29, 27, 8, 27, 29, 1, 0, 18, 10, 10, 29, 0, 16, 19, 26, 11, 2,\n            1, 20, 30, 4, 20, 3, 15, 30, 12, 4, 4, 12, 5, 5, 27, 4, 4, 27, 20, 21, 25, 5, 7, 8, 25, 22, 7, 14, 7, 25,\n            14, 23, 28, 31, 0, 7, 17, 24, 26, 9, 31, 28, 9, 8, 27, 5, 2, 20, 1, 13, 19, 18, 10, 11, 1, 19, 13, 26, 3,\n            11, 19, 19, 16, 3, 11, 3, 2, 11, 18, 19, 20, 15, 30, 29, 10, 1, 25, 21, 14, 8, 5, 25, 5, 12, 21, 6, 7, 22,\n            7, 6, 23, 8, 0, 29, 8, 7, 0, 23, 31, 7, 13, 31, 9, 18, 31, 13, 9, 28, 24, 26, 13, 9, 27, 1, 20, 7, 31, 17,\n        ],\n    },\n    {\n        type: \"mesh\",\n        vertices: [\n            -217, 34, -153, 198, 90, 20, 212, 85, 169, -131, 93, 171, 197, 113, 30, 173, 121, 164, 315, 29, -16, 219,\n            24, 189, 282, 50, -102, 232, 38, -181, -195, -9, -166, -156, 30, -207, -51, -9, -231, -180, 91, -173, -19,\n            73, -204, -280, 23, 96, -242, 100, 107, 3, 158, -82, 109, 88, 221, 275, -10, -40, 236, -10, -135, -178, 49,\n            184, -1, -10, -243, 265, -11, 109, -12, -9, 237, -36, 46, 251, -233, 86, -81, 93, 77, -171, -163, 133, 69,\n            18, 16, 263, 296, 44, 93, 131, -12, -226, -89, -10, -201, -273, -10, -51, -240, -9, 110, 190, -12, 192,\n            -253, -11, -92, 42, 43, -258, -115, -11, 238, 168, 99, -88, -285, -10, 24, 71, 124, -158, 298, -10, 10, 116,\n            150, -24, -282, 44, 39,\n        ],\n        faces: [\n            44, 16, 26, 13, 26, 16, 0, 26, 13, 27, 14, 41, 4, 5, 1, 7, 30, 2, 28, 5, 43, 41, 39, 27, 17, 43, 41, 43, 4,\n            39, 13, 28, 17, 17, 41, 13, 28, 43, 17, 24, 29, 38, 29, 35, 7, 18, 25, 29, 5, 18, 2, 18, 5, 3, 30, 42, 6,\n            30, 35, 23, 19, 20, 8, 8, 20, 9, 9, 39, 8, 1, 30, 8, 31, 37, 9, 11, 14, 37, 14, 27, 37, 32, 11, 12, 11, 37,\n            12, 11, 0, 13, 33, 40, 44, 44, 26, 33, 33, 0, 36, 34, 38, 15, 44, 40, 15, 21, 3, 16, 27, 39, 9, 2, 30, 1,\n            21, 25, 3, 16, 3, 28, 28, 3, 5, 4, 43, 5, 41, 43, 39, 13, 16, 28, 25, 21, 38, 38, 29, 25, 7, 18, 29, 29, 24,\n            35, 18, 7, 2, 18, 3, 25, 30, 23, 42, 30, 7, 35, 8, 30, 6, 6, 19, 8, 6, 42, 19, 8, 39, 1, 37, 31, 22, 27, 9,\n            37, 9, 20, 31, 10, 11, 32, 11, 10, 0, 12, 37, 22, 14, 13, 41, 14, 11, 13, 33, 26, 0, 36, 0, 10, 21, 44, 15,\n            16, 44, 21, 15, 40, 34, 38, 21, 15, 4, 1, 39, 5, 2, 1,\n        ],\n    },\n    {\n        type: \"mesh\",\n        vertices: [\n            -101, 102, 57, 99, 35, 102, 40, 72, 80, 59, 14, -168, -186, 22, 45, -176, 25, -30, 66, -7, 146, 153, -7, 53,\n            -110, 47, -96, -90, -8, -146, 150, -7, -12, -200, -7, 8, -173, -7, -55, 55, 46, -60, 125, -7, 110, 136, 30,\n            -10, -149, 58, 68, -15, 82, -71, 98, -7, -86, -34, -6, -194, -33, -7, 171, -36, 65, 137, 38, -8, -192, -103,\n            -9, 147, -12, 62, -152,\n        ],\n        faces: [\n            2, 17, 0, 17, 8, 0, 17, 24, 8, 19, 24, 22, 5, 11, 4, 2, 13, 17, 17, 13, 24, 21, 23, 20, 1, 2, 21, 7, 15, 1,\n            7, 10, 15, 5, 9, 12, 15, 18, 13, 0, 5, 16, 0, 8, 5, 1, 15, 2, 10, 18, 15, 3, 13, 18, 24, 3, 22, 11, 23, 4,\n            4, 16, 5, 16, 4, 23, 24, 13, 3, 15, 13, 2, 6, 1, 21, 6, 21, 20, 6, 14, 1, 2, 0, 21, 1, 14, 7, 3, 18, 22, 8,\n            24, 19, 8, 19, 9, 12, 11, 5, 5, 8, 9, 16, 23, 21, 16, 21, 0,\n        ],\n    },\n    {\n        type: \"mesh\",\n        vertices: [\n            86, 55, -18, 58, 38, 73, 97, -12, 79, 135, 7, 10, -93, -11, -72, -133, 5, 33, 13, 68, -32, 94, -11, -57,\n            -90, 52, 53, -24, -11, -106, -13, -10, 104, -75, 49, -69, -12, 18, 114, 49, -12, -96, -46, -11, -85, -119,\n            -11, -26, 48, 5, -111, -58, -11, 105, -117, -12, 52, -5, 35, -93, 123, -11, 7,\n        ],\n        faces: [\n            5, 8, 11, 2, 3, 1, 8, 1, 6, 11, 8, 6, 6, 19, 11, 10, 12, 17, 20, 7, 3, 3, 7, 16, 16, 0, 3, 16, 9, 19, 14, 4,\n            9, 15, 18, 5, 5, 11, 15, 18, 17, 5, 19, 0, 16, 1, 3, 0, 0, 6, 1, 19, 6, 0, 12, 8, 17, 2, 1, 12, 12, 10, 2,\n            1, 8, 12, 3, 2, 20, 16, 13, 9, 16, 7, 13, 19, 4, 11, 15, 11, 4, 17, 8, 5, 9, 4, 19,\n        ],\n    },\n];\n","export default [\n    {\n        type: \"mesh\",\n        mirror: true,\n        flatShading: true,\n        vertices: [\n            692, 966, -52, 661, 834, -52, 692, 966, 52, 661, 834, 52, 0, 894, -52, 0, 776, -52, 0, 894, 52, 0, 776, 52,\n            518, 935, 52, 345, 913, 52, 170, 899, 52, 162, 779, 52, 328, 790, 52, 494, 808, 52, 170, 899, -52, 345, 913,\n            -52, 518, 935, -52, 494, 808, -52, 328, 790, -52, 162, 779, -52, 0, 618, 16, 0, 697, 16, 0, 618, -16, 0,\n            697, -16, 586, 618, 16, 586, 697, 16, 586, 618, -16, 586, 697, -16, 331, -29, -75, 331, 766, -52, 369, -29,\n            -65, 357, 766, -45, 396, -29, -37, 377, 766, -26, 406, -29, 0, 384, 766, 0, 396, -29, 37, 377, 766, 26, 369,\n            -29, 65, 357, 766, 45, 331, -29, 75, 331, 766, 52, 294, -29, 65, 305, 766, 45, 267, -29, 37, 286, 766, 26,\n            257, -29, 0, 279, 766, 0, 267, -29, -37, 286, 766, -26, 294, -29, -65, 305, 766, -45, 0, 777, 85, 0, 681,\n            33, 333, 762, -75, 333, 806, -75, 371, 762, -65, 371, 806, -65, 398, 762, -37, 398, 806, -37, 408, 762, 0,\n            408, 806, 0, 398, 762, 37, 398, 806, 37, 371, 762, 65, 371, 806, 65, 333, 762, 75, 333, 806, 75, 296, 762,\n            65, 296, 806, 65, 268, 762, 37, 268, 806, 37, 258, 762, 0, 258, 806, 0, 268, 762, -37, 268, 806, -37, 296,\n            762, -65, 296, 806, -65, 0, 681, -33, 0, 777, -85, 52, 681, 33, 52, 777, 85, 52, 681, -33, 52, 777, -85,\n        ],\n        faces: [\n            4, 10, 14, 1, 13, 17, 11, 6, 7, 0, 3, 1, 16, 1, 17, 4, 19, 5, 14, 18, 19, 15, 17, 18, 3, 8, 13, 13, 9, 12,\n            12, 10, 11, 19, 7, 5, 19, 12, 11, 18, 13, 12, 16, 2, 0, 15, 8, 16, 14, 9, 15, 23, 26, 22, 27, 24, 26, 25,\n            20, 24, 26, 20, 22, 23, 25, 27, 29, 30, 28, 31, 32, 30, 33, 34, 32, 35, 36, 34, 37, 38, 36, 39, 40, 38, 41,\n            42, 40, 43, 44, 42, 45, 46, 44, 47, 48, 46, 49, 50, 48, 51, 28, 50, 55, 56, 54, 57, 58, 56, 59, 60, 58, 61,\n            62, 60, 63, 64, 62, 79, 81, 83, 65, 66, 64, 82, 53, 78, 67, 68, 66, 81, 53, 80, 69, 70, 68, 83, 80, 82, 71,\n            72, 70, 79, 82, 78, 73, 74, 72, 75, 63, 59, 75, 76, 74, 77, 54, 76, 60, 68, 76, 4, 6, 10, 1, 3, 13, 11, 10,\n            6, 0, 2, 3, 16, 0, 1, 4, 14, 19, 14, 15, 18, 15, 16, 17, 3, 2, 8, 13, 8, 9, 12, 9, 10, 19, 11, 7, 19, 18,\n            12, 18, 17, 13, 16, 8, 2, 15, 9, 8, 14, 10, 9, 23, 27, 26, 27, 25, 24, 25, 21, 20, 26, 24, 20, 23, 21, 25,\n            29, 31, 30, 31, 33, 32, 33, 35, 34, 35, 37, 36, 37, 39, 38, 39, 41, 40, 41, 43, 42, 43, 45, 44, 45, 47, 46,\n            47, 49, 48, 49, 51, 50, 51, 29, 28, 55, 57, 56, 57, 59, 58, 59, 61, 60, 61, 63, 62, 63, 65, 64, 79, 52, 81,\n            65, 67, 66, 82, 80, 53, 67, 69, 68, 81, 52, 53, 69, 71, 70, 83, 81, 80, 71, 73, 72, 79, 83, 82, 73, 75, 74,\n            59, 57, 55, 55, 77, 75, 75, 73, 71, 71, 69, 75, 67, 65, 63, 63, 61, 59, 59, 55, 75, 75, 69, 67, 67, 63, 75,\n            75, 77, 76, 77, 55, 54, 76, 54, 56, 56, 58, 76, 60, 62, 68, 64, 66, 68, 68, 70, 72, 72, 74, 68, 76, 58, 60,\n            62, 64, 68, 68, 74, 76,\n        ],\n    },\n];\n","export default [\n    {\n        type: \"extrude\",\n        vertices: [-0.198, -0.302, 0.197, -0.3, 0.372, 0, 0.199, 0.298, -0.202, 0.298, -0.368, 0],\n    },\n];\n","export default [\n    {\n        type: \"extrude\",\n        vertices: [\n            -0.054, -0.178, -0.007, -0.182, 0.069, -0.027, 0.189, 0.079, 0.178, 0.124, -0.007, 0.097, -0.145, 0.182,\n            -0.178, 0.144, -0.079, -0.021,\n        ],\n    },\n    {\n        type: \"lathe\",\n        segments: 4,\n        vertices: [\n            0.004, 0.02, 0.012, 0.092, 0.042, 0.166, 0.067, 0.55, 0.101, 0.594, 0.105, 0.838, 0.193, 0.934, 0.18, 0.994,\n        ],\n    },\n    {\n        type: \"lathe\",\n        segments: 5,\n        vertices: [0.069, 0.216, 0.067, 0.562, 0.126, 0.562, 0.128, 0.774, 0.191, 0.774, 0.193, 0.986],\n    },\n];\n","export default [\n    {\n        type: \"lathe\",\n        noise: 0.015,\n        segments: 6,\n        vertices: [0.000001, 0.826, 0.054, 0.832, 0.105, 0.854, 0.136, 0.9, 0.136, 0.958, 0.118, 0.994],\n    },\n    {\n        type: \"lathe\",\n        noise: 0.015,\n        segments: 14,\n        vertices: [\n            0.000001, 0.01, 0.069, 0.022, 0.13, 0.068, 0.178, 0.18, 0.189, 0.32, 0.191, 0.59, 0.193, 0.75, 0.138, 0.79,\n            0.018, 0.808, 0.018, 0.996,\n        ],\n    },\n    {\n        type: \"lathe\",\n        noise: 0.015,\n        segments: 14,\n        vertices: [0.000001, 0.436, 0.126, 0.46, 0.201, 0.57, 0.219, 0.72, 0.154, 0.846, 0.028, 0.884, 0.034, 0.996],\n    },\n];\n","export default [\n    {\n        type: \"lathe\",\n        segments: 10,\n        vertices: [\n            0.000001, 0.23, 0.042, 0.23, 0.069, 0.36, 0.038, 0.362, 0.038, 0.372, 0.06, 0.372, 0.073, 0.572, 0.024,\n            0.572, 0.024, 0.67, 0.069, 0.67, 0.075, 0.722, 0.097, 0.724, 0.105, 0.852, 0.083, 0.902, 0.065, 0.902,\n            0.065, 0.924, 0.128, 0.924, 0.146, 0.996,\n        ],\n    },\n    {\n        type: \"lathe\",\n        segments: 16,\n        vertices: [\n            0.000001, 0.232, 0.229, 0.182, 0.486, 0.07, 0.356, 0.182, 0.213, 0.242, 0.154, 0.242, 0.144, 0.262, 0.178,\n            0.262, 0.126, 0.314, 0.04, 0.328, 0.038, 0.374, 0.058, 0.374, 0.071, 0.408, 0.026, 0.406, 0.03, 0.42, 0.091,\n            0.418, 0.034, 0.496, 0.01, 0.498, 0.03, 0.506, 0.014, 0.998,\n        ],\n    },\n];\n","export default [\n    {\n        type: \"lathe\",\n        noise: 0.02,\n        segments: 14,\n        vertices: [\n            0.000001, 0.006, 0.13, 0.018, 0.341, 0.084, 0.437, 0.144, 0.492, 0.234, 0.484, 0.246, 0.276, 0.232, 0.107,\n            0.284, 0.046, 0.346, 0.062, 0.852, 0.097, 0.956, 0.166, 0.998,\n        ],\n    },\n    {\n        type: \"lathe\",\n        noise: 0.02,\n        segments: 10,\n        vertices: [\n            0.000001, 0.562, 0.091, 0.572, 0.172, 0.61, 0.223, 0.666, 0.256, 0.74, 0.258, 0.806, 0.246, 0.824, 0.062,\n            0.826, 0.065, 0.948, 0.097, 0.998,\n        ],\n    },\n    {\n        type: \"lathe\",\n        noise: 0.02,\n        segments: 10,\n        vertices: [\n            0.000001, 0.768, 0.099, 0.772, 0.219, 0.802, 0.306, 0.844, 0.352, 0.886, 0.352, 0.908, 0.118, 0.904, 0.107,\n            0.93, 0.115, 0.966, 0.14, 0.996,\n        ],\n    },\n];\n","import * as perlin from \"./PerlinNoise\";\n\nexport default {\n    schema: {\n        ground: { default: \"hills\", oneOf: [\"none\", \"flat\", \"hills\", \"canyon\", \"spikes\", \"noise\"] },\n        groundYScale: { type: \"float\", default: 3, min: 0, max: 50 },\n        groundTexture: { default: \"none\", oneOf: [\"none\", \"checkerboard\", \"squares\", \"walkernoise\"] },\n        groundColor: { type: \"color\", default: \"#553e35\" },\n        groundColor2: { type: \"color\", default: \"#694439\" },\n    },\n\n    initGround: function () {\n        // create ground\n        this.groundMaterial = null;\n        this.ground = document.createElement(\"a-entity\");\n        this.ground.setAttribute(\"rotation\", \"-90 0 0\");\n        this.ground.classList.add(\"environmentGround\");\n        this.ground.classList.add(\"environment\");\n        this.groundCanvas = null;\n        this.groundTexture = null;\n        this.groundMaterial = null;\n        this.groundGeometry = null;\n\n        this.el.appendChild(this.ground);\n    },\n\n    // updates ground attributes, and geometry if required\n    updateGround: function (updateGeometry) {\n        var resolution = 64; // number of divisions of the ground mesh\n\n        if (updateGeometry) {\n            var visibleground = this.environmentData.ground != \"none\";\n            this.ground.setAttribute(\"visible\", visibleground);\n            if (!visibleground) {\n                return;\n            }\n\n            if (!this.groundGeometry) {\n                this.groundGeometry = new THREE.PlaneGeometry(\n                    this.STAGE_SIZE + 2,\n                    this.STAGE_SIZE + 2,\n                    resolution - 1,\n                    resolution - 1\n                );\n            }\n            var perlinSeed = perlin.seed(this.environmentData.seed);\n            var verts = this.groundGeometry.attributes.position.array;\n            var numVerts = verts.length;\n            var frequency = 10;\n            var inc = frequency / resolution;\n            var x = 0;\n            var y = 0;\n\n            for (var i = 2; i < numVerts; i += 3) {\n                if (this.environmentData.ground == \"flat\") {\n                    verts[i] = 0;\n                    continue;\n                }\n\n                var h;\n                switch (this.environmentData.ground) {\n                    case \"hills\": {\n                        h = Math.max(0, perlin.noise(perlinSeed, x, y, 0));\n                        break;\n                    }\n                    case \"canyon\": {\n                        h = 0.2 + perlin.noise(perlinSeed, x, y, 0) * 0.8;\n                        h = Math.min(1, Math.pow(h, 2) * 10);\n                        break;\n                    }\n                    case \"spikes\": {\n                        h = this.random(i) < 0.02 ? this.random(i + 1) : 0;\n                        break;\n                    }\n                    case \"noise\": {\n                        h = this.random(i) < 0.35 ? this.random(i + 1) : 0;\n                        break;\n                    }\n                }\n\n                h += this.random(i + 2) * 0.1; // add some randomness\n\n                // flat ground in the center\n                var xx = (x * 2) / frequency - 1;\n                var yy = (y * 2) / frequency - 1;\n                var pa = this.environmentData.playArea;\n                xx = Math.max(0, Math.min(1, (Math.abs(xx) - (pa - 0.9)) * (1 / pa)));\n                yy = Math.max(0, Math.min(1, (Math.abs(yy) - (pa - 0.9)) * (1 / pa)));\n                h *= xx > yy ? xx : yy;\n                if (h < 0.01) h = 0; // stick to the floor\n\n                // set height\n                verts[i] = h;\n\n                // calculate next x,y ground coordinates\n                x += inc;\n                if (x >= 10) {\n                    x = 0;\n                    y += inc;\n                }\n            }\n\n            this.groundGeometry.computeVertexNormals();\n\n            this.groundGeometry.attributes.position.needsUpdate = true;\n            this.groundGeometry.attributes.normal.needsUpdate = true;\n        }\n\n        // apply Y scale. There's no need to recalculate the geometry for this. Just change scale\n        this.ground.setAttribute(\"scale\", { z: this.environmentData.groundYScale });\n\n        // update ground, playarea and grid textures.\n        var groundResolution = 2048;\n        var texMeters = 20; // ground texture of 20 x 20 meters\n        var texRepeat = this.STAGE_SIZE / texMeters;\n\n        if (!this.groundCanvas || this.groundCanvas.width != groundResolution) {\n            this.gridCanvas = document.createElement(\"canvas\");\n            this.gridCanvas.width = groundResolution;\n            this.gridCanvas.height = groundResolution;\n            this.gridTexture = new THREE.Texture(this.gridCanvas);\n            this.gridTexture.wrapS = THREE.RepeatWrapping;\n            this.gridTexture.wrapT = THREE.RepeatWrapping;\n            this.gridTexture.repeat.set(texRepeat, texRepeat);\n\n            this.groundCanvas = document.createElement(\"canvas\");\n            this.groundCanvas.width = groundResolution;\n            this.groundCanvas.height = groundResolution;\n            this.groundTexture = new THREE.Texture(this.groundCanvas);\n            this.groundTexture.wrapS = THREE.RepeatWrapping;\n            this.groundTexture.wrapT = THREE.RepeatWrapping;\n            this.groundTexture.repeat.set(texRepeat, texRepeat);\n\n            // ground material diffuse map is the regular ground texture and the grid texture\n            // is used in the emissive map. This way, the grid is always equally visible, even at night.\n            this.groundMaterialProps = {\n                map: this.groundTexture,\n                emissive: new THREE.Color(0xffffff),\n                emissiveMap: this.gridTexture,\n                flatShading: true,\n                shininess: 0,\n            };\n\n            this.groundMaterial = new THREE.MeshPhongMaterial(this.groundMaterialProps);\n        }\n\n        var groundctx = this.groundCanvas.getContext(\"2d\");\n        var gridctx = this.gridCanvas.getContext(\"2d\");\n\n        this.drawTexture(groundctx, groundResolution, texMeters);\n\n        gridctx.fillStyle = \"#000000\";\n        gridctx.fillRect(0, 0, groundResolution, groundResolution);\n        this.drawGrid(gridctx, groundResolution, texMeters);\n\n        this.groundTexture.needsUpdate = true;\n        this.gridTexture.needsUpdate = true;\n\n        if (updateGeometry) {\n            var mesh = new THREE.Mesh(this.groundGeometry, this.groundMaterial);\n            this.ground.setObject3D(\"mesh\", mesh);\n        } else {\n            this.ground.getObject3D(\"mesh\").material = this.groundMaterial;\n        }\n\n        this.ground.setAttribute(\"shadow\", {\n            cast: false,\n            receive: this.environmentData.shadow,\n        });\n    },\n\n    // draw ground texture to a canvas context\n    drawTexture: function (ctx, size, texMeters) {\n        // fill all with ground Color\n        ctx.fillStyle = this.environmentData.groundColor;\n        ctx.fillRect(0, 0, size, size);\n\n        var i, col, col1, col2, im, imdata, numpixels;\n\n        if (this.environmentData.groundTexture == \"none\") return;\n        switch (this.environmentData.groundTexture) {\n            case \"checkerboard\": {\n                ctx.fillStyle = this.environmentData.groundColor2;\n                var num = Math.floor(texMeters / 2);\n                var step = size / (texMeters / 2); // 2 meters == <step> pixels\n                for (i = 0; i < num + 1; i += 2) {\n                    for (var j = 0; j < num + 1; j++) {\n                        ctx.fillRect(\n                            Math.floor((i + (j % 2)) * step),\n                            Math.floor(j * step),\n                            Math.floor(step),\n                            Math.floor(step)\n                        );\n                    }\n                }\n                break;\n            }\n            case \"squares\": {\n                var numSquares = 16;\n                var squareSize = size / numSquares;\n                col1 = new THREE.Color(this.environmentData.groundColor);\n                col2 = new THREE.Color(this.environmentData.groundColor2);\n                for (i = 0; i < numSquares * numSquares; i++) {\n                    col = this.random(i + 3) > 0.5 ? col1.clone() : col2.clone();\n                    col.addScalar(this.random(i + 3) * 0.1 - 0.05);\n                    ctx.fillStyle = \"#\" + col.getHexString();\n                    ctx.fillRect(\n                        (i % numSquares) * squareSize,\n                        Math.floor(i / numSquares) * squareSize,\n                        squareSize,\n                        squareSize\n                    );\n                }\n                break;\n            }\n            case \"noise\": {\n                // TODO: fix\n                imdata = ctx.getImageData(0, 0, size, size);\n                im = imdata.data;\n                col1 = new THREE.Color(this.environmentData.groundColor);\n                col2 = new THREE.Color(this.environmentData.groundColor2);\n                var diff = new THREE.Color(col2.r - col1.r, col2.g - col1.g, col2.b - col1.b);\n                const perlinSeed = perlin.seed();\n                for (i = 0, j = 0, numpixels = im.length; i < numpixels; i += 4, j++) {\n                    var rnd = perlin.noise(perlinSeed, ((j % size) / size) * 3, (j / size / size) * 3, 0);\n                    im[i + 0] = Math.floor((col1.r + diff.r * rnd) * 255);\n                    im[i + 1] = Math.floor((col1.g + diff.g * rnd) * 255);\n                    im[i + 2] = Math.floor((col1.b + diff.b * rnd) * 255);\n                }\n                ctx.putImageData(imdata, 0, 0);\n                break;\n            }\n            case \"walkernoise\": {\n                var s = Math.floor(size / 2);\n                var tex = document.createElement(\"canvas\");\n                tex.width = s;\n                tex.height = s;\n                var texctx = tex.getContext(\"2d\");\n                texctx.fillStyle = this.environmentData.groundColor;\n                texctx.fillRect(0, 0, s, s);\n                imdata = texctx.getImageData(0, 0, s, s);\n                im = imdata.data;\n                col1 = new THREE.Color(this.environmentData.groundColor);\n                col2 = new THREE.Color(this.environmentData.groundColor2);\n                var walkers = [];\n                var numwalkers = 1000;\n                for (i = 0; i < numwalkers; i++) {\n                    col = col1.clone().lerp(col2, Math.random());\n                    walkers.push({\n                        x: Math.random() * s,\n                        y: Math.random() * s,\n                        r: Math.floor(col.r * 255),\n                        g: Math.floor(col.g * 255),\n                        b: Math.floor(col.b * 255),\n                    });\n                }\n                var iterations = 5000;\n                for (var it = 0; it < iterations; it++) {\n                    for (i = 0; i < numwalkers; i++) {\n                        var walker = walkers[i];\n                        var pos = Math.floor(walker.y * s + walker.x) * 4;\n                        im[pos + 0] = walker.r;\n                        im[pos + 1] = walker.g;\n                        im[pos + 2] = walker.b;\n                        walker.x += Math.floor(Math.random() * 3) - 1;\n                        walker.y += Math.floor(Math.random() * 3) - 1;\n                        if (walker.x >= s) walker.x = walker.x - s;\n                        if (walker.y >= s) walker.y = walker.y - s;\n                        if (walker.x < 0) walker.x = s + walker.x;\n                        if (walker.y < 0) walker.y = s + walker.y;\n                    }\n                }\n                texctx.putImageData(imdata, 0, 0);\n                ctx.drawImage(tex, 0, 0, size, size);\n                break;\n            }\n        }\n    },\n};\n","export default {\n    schema: {\n        skyType: { default: \"color\", oneOf: [\"none\", \"color\", \"gradient\", \"atmosphere\"] },\n        skyColor: { type: \"color\" },\n    },\n\n    initSky: function () {\n        // create sky\n        this.sky = document.createElement(\"a-sky\");\n        this.sky.setAttribute(\"radius\", this.STAGE_SIZE);\n        this.sky.setAttribute(\"theta-length\", 110);\n        this.sky.classList.add(\"environment\");\n\n        this.el.appendChild(this.sky);\n    },\n};\n","export default {\n    schema: {},\n\n    initStars: function () {\n        this.stars = null;\n    },\n    // initializes the BufferGeometry for the stars\n    createStars: function () {\n        var numStars = 2000;\n        var geometry = new THREE.BufferGeometry();\n        var positions = new Float32Array(numStars * 3);\n        var radius = this.STAGE_SIZE - 1;\n        var v = new THREE.Vector3();\n        for (var i = 0; i < positions.length; i += 3) {\n            v.set(this.random(i + 23) - 0.5, this.random(i + 24), this.random(i + 25) - 0.5);\n            v.normalize();\n            v.multiplyScalar(radius);\n            positions[i] = v.x;\n            positions[i + 1] = v.y;\n            positions[i + 2] = v.z;\n        }\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n        geometry.setDrawRange(0, 0); // don't draw any yet\n        var material = new THREE.PointsMaterial({ size: 0.01, color: 0xcccccc, fog: false });\n        this.stars.setObject3D(\"mesh\", new THREE.Points(geometry, material));\n    },\n\n    // Sets the number of stars visible. Calls createStars() to initialize if needed.\n    setStars: function (numStars) {\n        if (!this.stars) {\n            this.stars = document.createElement(\"a-entity\");\n            this.stars.id = \"stars\";\n            this.createStars();\n            this.el.appendChild(this.stars);\n        }\n        numStars = Math.floor(Math.min(2000, Math.max(0, numStars)));\n        this.stars.getObject3D(\"mesh\").geometry.setDrawRange(0, numStars);\n    },\n};\n","export default {\n    schema: {\n        dressing: {\n            default: \"none\",\n            oneOf: [\n                \"none\",\n                \"cubes\",\n                \"pyramids\",\n                \"cylinders\",\n                \"hexagons\",\n                \"stones\",\n                \"trees\",\n                \"mushrooms\",\n                \"towers\",\n                \"apparatus\",\n                \"arches\",\n                \"torii\",\n            ],\n        },\n        dressingAmount: { type: \"int\", default: 10, min: 0, max: 1000 },\n        dressingColor: { type: \"color\", default: \"#795449\" },\n        dressingScale: { type: \"float\", default: 5, min: 0, max: 100 },\n        dressingVariance: { type: \"vec3\", default: { x: 1, y: 1, z: 1 } },\n        dressingUniformScale: { default: true },\n        dressingOnPlayArea: { type: \"float\", default: 0, min: 0, max: 1 },\n    },\n    initDressing: function () {\n        this.dressing = document.createElement(\"a-entity\");\n        this.dressing.classList.add(\"environmentDressing\");\n        this.dressing.classList.add(\"environment\");\n\n        this.el.appendChild(this.dressing);\n    },\n\n    // updates set dressing\n    updateDressing: function () {\n        var dressing = new THREE.Object3D();\n        this.dressing.setAttribute(\"visible\", this.environmentData.dressing != \"none\");\n        if (this.environmentData.dressing == \"none\") {\n            return;\n        }\n\n        // get array of geometries\n        let geoset;\n        switch (this.environmentData.dressing) {\n            case \"cubes\": {\n                geoset = [new THREE.BoxGeometry(1, 1, 1)];\n                geoset[0].applyMatrix(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n                break;\n            }\n            case \"pyramids\": {\n                geoset = [new THREE.ConeGeometry(1, 1, 4, 1, true)];\n                geoset[0].applyMatrix(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n                break;\n            }\n            case \"cylinders\": {\n                geoset = [new THREE.CylinderGeometry(0.5, 0.5, 1, 8, 1, true)];\n                geoset[0].applyMatrix(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n                break;\n            }\n            default: {\n                geoset = this.getAssetGeometry(this.assets[this.environmentData.dressing]);\n                if (!geoset) return;\n                break;\n            }\n        }\n\n        const geometries = [];\n        for (var i = 0, r = 88343; i < this.environmentData.dressingAmount; i++, r++) {\n            const geo = geoset[Math.floor(this.random(33 + i) * geoset.length)].clone();\n\n            // // change vertex colors\n            // var color = new THREE.Color(0xffffff).multiplyScalar(1 - this.random(66 + i) * 0.3);\n\n            // for (var f = 0, fl = geo.faces.length; f < fl; f++) {\n            //     var face = geo.faces[f];\n            //     for (var v = 0; v < 3; v++) {\n            //         p = geo.vertices[face[faceindex[v]]]; // get vertex position\n            //         var floorao = p.y / 4 + 0.75;\n            //         face.vertexColors[v] = new THREE.Color(color.r * floorao, color.g * floorao, color.b * floorao);\n            //     }\n            // }\n\n            // set random position, rotation and scale\n            const ds = this.environmentData.dressingScale;\n            const dv = new THREE.Vector3(\n                this.environmentData.dressingVariance.x,\n                this.environmentData.dressingVariance.y,\n                this.environmentData.dressingVariance.z\n            );\n            const onPlayArea = this.random(r) < this.environmentData.dressingOnPlayArea;\n            const distance = onPlayArea\n                ? this.random(r + 1) * 15\n                : 10 + Math.max(dv.x, dv.z) + 10 * this.random(r + 1) + (this.random(r + 2) * this.STAGE_SIZE) / 3;\n\n            const direction = this.random(r + 3) * Math.PI * 2;\n            const matrix = new THREE.Matrix4();\n            const scale = this.random(r + 4);\n            const uniformScale = this.environmentData.dressingUniformScale;\n\n            matrix.compose(\n                // position\n                new THREE.Vector3(Math.cos(direction) * distance, 0, Math.sin(direction) * distance),\n                // rotation\n                new THREE.Quaternion().setFromAxisAngle(\n                    new THREE.Vector3(0, 1, 0),\n                    (this.random(r + 5) - 0.5) * dv.length() * Math.PI * 2\n                ),\n                // scale\n                new THREE.Vector3(\n                    ds + (uniformScale ? scale : this.random(r + 6)) * dv.x,\n                    ds + (uniformScale ? scale : this.random(r + 7)) * dv.y,\n                    ds + (uniformScale ? scale : this.random(r + 8)) * dv.z\n                )\n            );\n            geo.applyMatrix4(matrix);\n            geometries.push(geo);\n        }\n\n        // convert geometry to buffergeometry\n        const bufgeo = THREE.BufferGeometryUtils.mergeBufferGeometries(geometries);\n        bufgeo.attributes.position.needsUpdate = true;\n\n        // setup Materialial\n        const material = new THREE.MeshLambertMaterial({\n            color: new THREE.Color(this.environmentData.dressingColor),\n        });\n\n        // create mesh\n        const mesh = new THREE.Mesh(bufgeo, material);\n        dressing.add(mesh);\n        // add to scene\n        this.dressing.setObject3D(\"mesh\", dressing);\n    },\n\n    // returns an array of THREE.Geometry for set dressing\n    getAssetGeometry: function (data) {\n        if (!data) return null;\n\n        var geoset = [];\n        var self = this;\n\n        const applyNoise = (geo, noise) => {\n            var verts = geo.attributes.position.array;\n            var numVerts = verts.length;\n            for (var i = 0; i < numVerts; i += 3) {\n                verts[i] = (self.random(i) - 0.5) * noise;\n                verts[i + 1] = (self.random(i + numVerts) - 0.5) * noise;\n                verts[i + 2] = (self.random(i + numVerts * 2) - 0.5) * noise;\n            }\n            geo.attributes.position.needsUpdate = true;\n        };\n\n        var i, geo, verts;\n\n        for (var j = 0; j < data.length; j++) {\n            if (data[j].type == \"lathe\") {\n                var maxy = -99999;\n                var points = [];\n                verts = data[j].vertices;\n                for (i = 0; i < verts.length; i += 2) {\n                    points.push(new THREE.Vector2(verts[i], verts[i + 1]));\n                    if (verts[i + 1] > maxy) {\n                        maxy = verts[i + 1];\n                    }\n                }\n                geo = new THREE.LatheGeometry(points, data[j][\"segments\"] || 8);\n                geo.applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(-Math.PI, 0, 0)));\n                geo.applyMatrix4(new THREE.Matrix4().makeTranslation(0, maxy, 0));\n                //if (data[j]['noise']) applyNoise(geo, data[j].noise);\n                geo = geo.toNonIndexed();\n                geoset.push(geo);\n            } else if (data[j].type == \"extrude\") {\n                var shape = new THREE.Shape();\n                verts = data[j].vertices;\n                for (i = 0; i < verts.length; i += 2) {\n                    if (i == 0) shape.moveTo(verts[i], verts[i + 1]);\n                    else shape.lineTo(verts[i], verts[i + 1]);\n                }\n                geo = new THREE.ExtrudeGeometry(shape, { amount: 1, bevelEnabled: false });\n                geo.applyMatrix(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(-Math.PI / 2, 0, 0)));\n                if (data[j][\"noise\"]) applyNoise(geo, data[j].noise);\n                geoset.push(geo);\n            } else if (data[j].type == \"mesh\") {\n                geo = new THREE.BufferGeometry();\n                verts = data[j].vertices;\n                var faces = data[j].faces;\n                var positions = new Float32Array(verts);\n\n                geo.setIndex(faces);\n                geo.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n\n                if (data[j][\"mirror\"]) {\n                    var mirroredGeo = geo.clone();\n                    mirroredGeo.applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(0, Math.PI, 0)));\n                    geo = THREE.BufferGeometryUtils.mergeBufferGeometries([geo, mirroredGeo]);\n                }\n\n                if (data[j][\"noise\"]) applyNoise(geo, data[j].noise);\n\n                geo = geo.toNonIndexed();\n                geo.computeVertexNormals();\n                geoset.push(geo);\n            }\n        }\n        return geoset;\n    },\n};\n","export default {\n    schema: {\n        grid: { default: \"none\", oneOf: [\"none\", \"1x1\", \"2x2\", \"crosses\", \"dots\", \"xlines\", \"ylines\"] },\n        gridColor: { type: \"color\", default: \"#ccc\" },\n    },\n\n    initGrid: function () {\n        this.gridCanvas = null;\n        this.gridTexture = null;\n    },\n\n    // draw grid to a canvas context\n    drawGrid: function (ctx, size, texMeters) {\n        if (this.environmentData.grid == \"none\") return;\n\n        // one grid feature each 2 meters\n\n        var num = Math.floor(texMeters / 2);\n        var step = size / (texMeters / 2); // 2 meters == <step> pixels\n        var i, j, ii;\n\n        ctx.fillStyle = this.environmentData.gridColor;\n\n        switch (this.environmentData.grid) {\n            case \"1x1\":\n            case \"2x2\": {\n                if (this.environmentData.grid == \"1x1\") {\n                    num = num * 2;\n                    step = size / texMeters;\n                }\n                for (i = 0; i < num; i++) {\n                    ii = Math.floor(i * step);\n                    ctx.fillRect(0, ii, size, 1);\n                    ctx.fillRect(ii, 0, 1, size);\n                }\n                break;\n            }\n            case \"crosses\": {\n                var l = Math.floor(step / 20);\n                for (i = 0; i < num + 1; i++) {\n                    ii = Math.floor(i * step);\n                    for (j = 0; j < num + 1; j++) {\n                        var jj = Math.floor(-l + j * step);\n                        ctx.fillRect(jj, ii, l * 2, 1);\n                        ctx.fillRect(ii, jj, 1, l * 2);\n                    }\n                }\n                break;\n            }\n            case \"dots\": {\n                for (i = 0; i < num + 1; i++) {\n                    for (j = 0; j < num + 1; j++) {\n                        ctx.beginPath();\n                        ctx.arc(Math.floor(j * step), Math.floor(i * step), 4, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                }\n                break;\n            }\n            case \"xlines\": {\n                for (i = 0; i < num; i++) {\n                    ctx.fillRect(Math.floor(i * step), 0, 1, size);\n                }\n                break;\n            }\n            case \"ylines\": {\n                for (i = 0; i < num; i++) {\n                    ctx.fillRect(0, Math.floor(i * step), size, 1);\n                }\n                break;\n            }\n        }\n    },\n};\n","export default {\n    initHemilight: function () {\n        this.hemilight = document.createElement(\"a-entity\");\n        this.hemilight.classList.add(\"environment\");\n        this.hemilight.setAttribute(\"position\", \"0 50 0\");\n        this.hemilight.setAttribute(\"light\", {\n            type: \"hemisphere\",\n            color: \"#CEE4F0\",\n            intensity: 0.4,\n        });\n\n        this.el.appendChild(this.hemilight);\n    },\n};\n","export default {\n    initSunlight: function () {\n        this.sunlight = document.createElement(\"a-entity\");\n        this.sunlight.classList.add(\"environment\");\n        this.sunlight.setAttribute(\"position\", this.data.lightPosition);\n        this.sunlight.setAttribute(\"light\", { intensity: 0.6 });\n\n        // add everything to the scene\n        this.el.appendChild(this.sunlight);\n    },\n};\n","import * as perlin from \"./PerlinNoise\";\nimport presets from \"./presets\";\nimport assets from \"./assets\";\nimport ground from \"./ground\";\nimport sky from \"./sky\";\nimport stars from \"./stars\";\nimport dressing from \"./dressing\";\nimport grid from \"./grid\";\nimport hemilight from \"./hemilight\";\nimport sunlight from \"./sunlight\";\n\nconst environment = {\n    ...ground,\n    ...sky,\n    ...stars,\n    ...dressing,\n    ...grid,\n    ...hemilight,\n    ...sunlight,\n\n    presets,\n    assets,\n\n    schema: {\n        ...ground.schema,\n        ...sky.schema,\n        ...stars.schema,\n        ...dressing.schema,\n        ...grid.schema,\n\n        active: { default: false },\n        preset: presets.schema,\n        seed: { type: \"int\", default: 1, min: 0, max: 1000 },\n\n        horizonColor: { type: \"color\" },\n        lighting: { default: \"distant\", oneOf: [\"none\", \"distant\", \"point\"] },\n        shadow: { default: false },\n        shadowSize: { default: 10 },\n        lightPosition: { type: \"vec3\", default: { x: 0, y: 1, z: -0.2 } },\n        fog: { type: \"float\", default: 0, min: 0, max: 1 },\n\n        flatShading: { default: false },\n        playArea: { type: \"float\", default: 1, min: 0.5, max: 10 },\n    },\n\n    multiple: false,\n\n    init: function () {\n        this.environmentData = {};\n\n        // stage ground diameter (and sky radius)\n        this.STAGE_SIZE = 200;\n\n        // save current scene fog\n        this.userFog = this.el.sceneEl.getAttribute(\"fog\");\n\n        this.initSky();\n        this.initStars();\n        this.initGround();\n        this.initDressing();\n        this.initGrid();\n        this.initHemilight();\n        this.initSunlight();\n    },\n\n    // returns a fog color from a specific sky type and sun height\n    getFogColor: function (skyType, sunHeight) {\n        var fogColor;\n        if (skyType == \"color\" || skyType == \"none\") {\n            fogColor = new THREE.Color(this.environmentData.skyColor);\n        } else if (skyType == \"gradient\") {\n            fogColor = new THREE.Color(this.environmentData.horizonColor);\n        } else if (skyType == \"atmosphere\") {\n            var fogRatios = [1, 0.5, 0.22, 0.1, 0.05, 0];\n            var fogColors = [\"#C0CDCF\", \"#81ADC5\", \"#525e62\", \"#2a2d2d\", \"#141616\", \"#000\"];\n\n            if (sunHeight <= 0) return \"#000\";\n\n            sunHeight = Math.min(1, sunHeight);\n\n            for (var i = 0; i < fogRatios.length; i++) {\n                if (sunHeight > fogRatios[i]) {\n                    var c1 = new THREE.Color(fogColors[i - 1]);\n                    var c2 = new THREE.Color(fogColors[i]);\n                    var a = (sunHeight - fogRatios[i]) / (fogRatios[i - 1] - fogRatios[i]);\n                    c2.lerp(c1, a);\n                    fogColor = c2;\n                    break;\n                }\n            }\n        }\n        // dim down the color\n        fogColor.multiplyScalar(0.9);\n        // mix it a bit with ground color\n        fogColor.lerp(new THREE.Color(this.data.groundColor), 0.3);\n\n        return \"#\" + fogColor.getHexString();\n    },\n\n    update: function (oldDataNonPreset) {\n        const oldData = !this.data.preset ? oldDataNonPreset : AFRAME.utils.extendDeep({}, this.environmentData);\n\n        if (!this.data.preset) {\n            this.environmentData = this.data;\n        } else {\n            this.environmentData = {};\n            Object.assign(this.environmentData, this.data);\n            Object.assign(this.environmentData, this.presets[this.data.preset]);\n            Object.assign(this.environmentData, this.el.components.environment.attrValue);\n        }\n\n        var skyType = this.environmentData.skyType;\n        var sunPos = new THREE.Vector3(\n            this.environmentData.lightPosition.x,\n            this.environmentData.lightPosition.y,\n            this.environmentData.lightPosition.z\n        );\n        sunPos.normalize();\n\n        // update light colors and intensities\n        if (this.sunlight) {\n            this.sunlight.setAttribute(\"position\", this.environmentData.lightPosition);\n            if (skyType != \"atmosphere\") {\n                // dim down the sky color for the light\n                var skycol = new THREE.Color(this.environmentData.skyColor);\n                skycol.r = (skycol.r + 1.0) / 2.0;\n                skycol.g = (skycol.g + 1.0) / 2.0;\n                skycol.b = (skycol.b + 1.0) / 2.0;\n                this.hemilight.setAttribute(\"light\", { color: \"#\" + skycol.getHexString() });\n                this.sunlight.setAttribute(\"light\", { intensity: 0.6 });\n                this.hemilight.setAttribute(\"light\", { intensity: 0.6 });\n            } else {\n                this.sunlight.setAttribute(\"light\", { intensity: 0.1 + sunPos.y * 0.5 });\n                this.hemilight.setAttribute(\"light\", { intensity: 0.1 + sunPos.y * 0.5 });\n            }\n\n            this.sunlight.setAttribute(\"light\", {\n                castShadow: this.environmentData.shadow,\n                shadowCameraLeft: -this.environmentData.shadowSize,\n                shadowCameraBottom: -this.environmentData.shadowSize,\n                shadowCameraRight: this.environmentData.shadowSize,\n                shadowCameraTop: this.environmentData.shadowSize,\n            });\n        }\n\n        // update sky colors\n        if (\n            skyType !== oldData.skyType ||\n            this.environmentData.skyColor != oldData.skyColor ||\n            this.environmentData.horizonColor != oldData.horizonColor\n        ) {\n            var mat = {};\n            mat.shader = { none: \"flat\", color: \"flat\", gradient: \"gradientshader\", atmosphere: \"skyshader\" }[skyType];\n            if (this.stars) {\n                this.stars.setAttribute(\"visible\", skyType == \"atmosphere\");\n            }\n            if (skyType == \"color\") {\n                mat.color = this.environmentData.skyColor;\n                mat.fog = false;\n            } else if (skyType == \"gradient\") {\n                mat.topColor = this.environmentData.skyColor;\n                mat.bottomColor = this.environmentData.horizonColor;\n            }\n\n            this.sky.setAttribute(\"material\", mat);\n        }\n\n        // set atmosphere sun position and stars\n        if (skyType == \"atmosphere\") {\n            this.sky.setAttribute(\"material\", { sunPosition: sunPos });\n            this.setStars((1 - Math.max(0, (sunPos.y + 0.08) * 8)) * 2000);\n        }\n\n        // set fog color\n        if (this.environmentData.fog > 0) {\n            this.el.sceneEl.setAttribute(\"fog\", {\n                color: this.getFogColor(skyType, sunPos.y),\n                far: (1.01 - this.environmentData.fog) * this.STAGE_SIZE * 2,\n            });\n        } else {\n            this.el.sceneEl.removeAttribute(\"fog\");\n        }\n\n        // scene lights\n        this.sunlight.setAttribute(\"light\", {\n            type: this.environmentData.lighting == \"point\" ? \"point\" : \"directional\",\n        });\n        this.sunlight.setAttribute(\"visible\", this.environmentData.lighting !== \"none\");\n        this.hemilight.setAttribute(\"visible\", this.environmentData.lighting !== \"none\");\n\n        // check if ground geometry needs to be calculated\n        var updateGroundGeometry =\n            !this.groundGeometry ||\n            this.environmentData.seed != oldData.seed ||\n            this.environmentData.ground != oldData.ground ||\n            this.environmentData.playArea != oldData.playArea ||\n            this.environmentData.flatShading != oldData.flatShading;\n\n        // check if any parameter of the ground was changed, and update it\n        if (\n            updateGroundGeometry ||\n            this.environmentData.groundColor != oldData.groundColor ||\n            this.environmentData.groundColor2 != oldData.groundColor2 ||\n            this.environmentData.groundYScale != oldData.groundYScale ||\n            this.environmentData.groundTexture != oldData.groundTexture ||\n            this.environmentData.gridColor != oldData.gridColor ||\n            this.environmentData.grid != oldData.grid\n        ) {\n            this.updateGround(updateGroundGeometry);\n            // set bounce light color to ground color\n            if (this.hemilight) this.hemilight.setAttribute(\"light\", { groundColor: this.environmentData.groundColor });\n        }\n\n        // update dressing\n        if (\n            this.environmentData.seed != oldData.seed ||\n            this.environmentData.dressingOnPlayArea != oldData.dressingOnPlayArea ||\n            this.environmentData.dressing != oldData.dressing ||\n            this.environmentData.flatShading != oldData.flatShading ||\n            this.environmentData.dressingAmount != oldData.dressingAmount ||\n            this.environmentData.dressingScale != oldData.dressingScale ||\n            this.environmentData.dressingColor != oldData.dressingColor ||\n            this.environmentData.dressingVariance.x != oldData.dressingVariance.x ||\n            this.environmentData.dressingVariance.y != oldData.dressingVariance.y ||\n            this.environmentData.dressingVariance.z != oldData.dressingVariance.z ||\n            this.environmentData.dressingUniformScale != oldData.dressingUniformScale\n        ) {\n            this.updateDressing();\n        }\n\n        this.sky.setAttribute(\"visible\", skyType !== \"none\");\n\n        this.el.setAttribute(\"visible\", this.environmentData.active);\n        if (!this.environmentData.active) {\n            if (this.userFog) {\n                this.el.sceneEl.setAttribute(\"fog\", this.userFog);\n            } else {\n                this.el.sceneEl.removeAttribute(\"fog\");\n            }\n        }\n\n        // dump current component settings to console\n        this.dumpParametersDiff();\n    },\n\n    // logs current parameters to console, for saving to a preset\n    logPreset: function () {\n        var str = \"{\";\n        for (var i in this.schema) {\n            if (i == \"preset\") continue;\n            str += i + \": \";\n            var type = this.schema[i].type;\n            if (type == \"vec3\") {\n                str +=\n                    \"{ x: \" +\n                    this.environmentData[i].x +\n                    \", y: \" +\n                    this.environmentData[i].y +\n                    \", z: \" +\n                    this.environmentData[i].z +\n                    \"}\";\n            } else if (type == \"string\" || type == \"color\") {\n                str += '\"' + this.environmentData[i] + '\"';\n            } else {\n                str += this.environmentData[i];\n            }\n            str += \", \";\n        }\n        str += \"}\";\n    },\n\n    // dumps current component settings to console.\n    dumpParametersDiff: function () {\n        // trim number to 3 decimals\n        function dec3(v) {\n            return Math.floor(v * 1000) / 1000;\n        }\n\n        var params = [];\n        var usingPreset = this.data.preset != \"none\" ? this.presets[this.data.preset] : false;\n\n        if (usingPreset) {\n            params.push(\"preset: \" + this.data.preset);\n        }\n\n        for (var i in this.schema) {\n            if (i == \"preset\" || (usingPreset && usingPreset[i] === undefined)) {\n                continue;\n            }\n            var def = usingPreset ? usingPreset[i] : this.schema[i].default;\n            var data = this.environmentData[i];\n            var type = this.schema[i].type;\n            if (type == \"vec3\") {\n                var coords = def;\n                if (typeof def == \"string\") {\n                    def = def.split(\" \");\n                    coords = { x: def[0], y: def[1], z: def[2] };\n                }\n                if (\n                    dec3(coords.x) != dec3(data.x) ||\n                    dec3(coords.y) != dec3(data.y) ||\n                    dec3(coords.z) != dec3(data.z)\n                ) {\n                    params.push(i + \": \" + dec3(data.x) + \" \" + dec3(data.y) + \" \" + dec3(data.z));\n                }\n            } else {\n                if (def != data) {\n                    if (this.schema[i].type == \"number\") {\n                        data = dec3(data);\n                    }\n                    params.push(i + \": \" + data);\n                }\n            }\n        }\n    },\n\n    // Custom Math.random() with seed. Given this.environmentData.seed and x, it always returns the same \"random\" number\n    random: function (x) {\n        return perlin.random(this.environmentData.seed, x);\n    },\n};\n\nexport default environment;\n","// atmosphere sky shader. From https://github.com/aframevr/aframe/blob/master/examples/test/shaders/shaders/sky.js\nconst skyshader = {\n    schema: {\n        luminance: { type: \"number\", default: 1, min: 0, max: 2, is: \"uniform\" },\n        turbidity: { type: \"number\", default: 2, min: 0, max: 20, is: \"uniform\" },\n        reileigh: { type: \"number\", default: 1, min: 0, max: 4, is: \"uniform\" },\n        mieCoefficient: { type: \"number\", default: 0.005, min: 0, max: 0.1, is: \"uniform\" },\n        mieDirectionalG: { type: \"number\", default: 0.8, min: 0, max: 1, is: \"uniform\" },\n        sunPosition: { type: \"vec3\", default: { x: 0, y: 0, z: -1 }, is: \"uniform\" },\n        color: { type: \"color\", default: \"#fff\" }, //placeholder to remove warning\n    },\n\n    vertexShader: [\n        \"varying vec3 vWorldPosition;\",\n        \"void main() {\",\n        \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n        \"vWorldPosition = worldPosition.xyz;\",\n        \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n        \"}\",\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n        \"uniform sampler2D skySampler;\",\n        \"uniform vec3 sunPosition;\",\n        \"varying vec3 vWorldPosition;\",\n\n        \"vec3 cameraPos = vec3(0., 0., 0.);\",\n\n        \"uniform float luminance;\",\n        \"uniform float turbidity;\",\n        \"uniform float reileigh;\",\n        \"uniform float mieCoefficient;\",\n        \"uniform float mieDirectionalG;\",\n\n        // constants for atmospheric scattering'\n        \"const float e = 2.71828182845904523536028747135266249775724709369995957;\",\n        \"const float pi = 3.141592653589793238462643383279502884197169;\",\n\n        // refractive index of air\n        \"const float n = 1.0003;\",\n        // number of molecules per unit volume for air at'\n        \"const float N = 2.545E25;\",\n        // 288.15K and 1013mb (sea level -45 celsius)\n        // depolatization factor for standard air\n        \"const float pn = 0.035;\",\n        // wavelength of used primaries, according to preetham\n        \"const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\",\n\n        // mie stuff\n        // K coefficient for the primaries\n        \"const vec3 K = vec3(0.686, 0.678, 0.666);\",\n        \"const float v = 4.0;\",\n\n        // optical length at zenith for molecules\n        \"const float rayleighZenithLength = 8.4E3;\",\n        \"const float mieZenithLength = 1.25E3;\",\n        \"const vec3 up = vec3(0.0, 1.0, 0.0);\",\n\n        \"const float EE = 1000.0;\",\n        \"const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\",\n        // 66 arc seconds -> degrees, and the cosine of that\n\n        // earth shadow hack'\n        \"const float cutoffAngle = pi/1.95;\",\n        \"const float steepness = 1.5;\",\n\n        \"vec3 totalRayleigh(vec3 lambda)\",\n        \"{\",\n        \"return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));\",\n        \"}\",\n\n        // see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n        // A simplied version of the total Rayleigh scattering to works on browsers that use ANGLE\n        \"vec3 simplifiedRayleigh()\",\n        \"{\",\n        \"return 0.0005 / vec3(94, 40, 18);\",\n        \"}\",\n\n        \"float rayleighPhase(float cosTheta)\",\n        \"{   \",\n        \"return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));\",\n        \"}\",\n\n        \"vec3 totalMie(vec3 lambda, vec3 K, float T)\",\n        \"{\",\n        \"float c = (0.2 * T ) * 10E-18;\",\n        \"return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\",\n        \"}\",\n\n        \"float hgPhase(float cosTheta, float g)\",\n        \"{\",\n        \"return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));\",\n        \"}\",\n\n        \"float sunIntensity(float zenithAngleCos)\",\n        \"{\",\n        \"return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\",\n        \"}\",\n\n        \"// Filmic ToneMapping http://filmicgames.com/archives/75\",\n        \"float A = 0.15;\",\n        \"float B = 0.50;\",\n        \"float C = 0.10;\",\n        \"float D = 0.20;\",\n        \"float E = 0.02;\",\n        \"float F = 0.30;\",\n        \"float W = 1000.0;\",\n\n        \"vec3 Uncharted2Tonemap(vec3 x)\",\n        \"{\",\n        \"return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\",\n        \"}\",\n\n        \"void main() \",\n        \"{\",\n        \"float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\",\n\n        \"float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));\",\n\n        \"vec3 sunDirection = normalize(sunPosition);\",\n\n        \"float sunE = sunIntensity(dot(sunDirection, up));\",\n\n        // extinction (absorbtion + out scattering)\n        // rayleigh coefficients\n\n        \"vec3 betaR = simplifiedRayleigh() * reileighCoefficient;\",\n\n        // mie coefficients\n        \"vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\",\n\n        // optical length\n        // cutoff angle at 90 to avoid singularity in next formula.\n        \"float zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\",\n        \"float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\",\n        \"float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\",\n\n        // combined extinction factor\n        \"vec3 Fex = exp(-(betaR * sR + betaM * sM));\",\n\n        // in scattering\n        \"float cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\",\n\n        \"float rPhase = rayleighPhase(cosTheta*0.5+0.5);\",\n        \"vec3 betaRTheta = betaR * rPhase;\",\n\n        \"float mPhase = hgPhase(cosTheta, mieDirectionalG);\",\n        \"vec3 betaMTheta = betaM * mPhase;\",\n\n        \"vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));\",\n        \"Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, sunDirection),5.0),0.0,1.0));\",\n\n        //nightsky\n        \"vec3 direction = normalize(vWorldPosition - cameraPos);\",\n        \"float theta = acos(direction.y); // elevation --> y-axis, [-pi/2, pi/2]\",\n        \"float phi = atan(direction.z, direction.x); // azimuth --> x-axis [-pi/2, pi/2]\",\n        \"vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\",\n        // vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;\n        \"vec3 L0 = vec3(0.1) * Fex;\",\n\n        // composition + solar disc\n        \"float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\",\n        \"L0 += (sunE * 19000.0 * Fex)*sundisk;\",\n\n        \"vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\",\n\n        \"vec3 texColor = (Lin+L0);   \",\n        \"texColor *= 0.04 ;\",\n        \"texColor += vec3(0.0,0.001,0.0025)*0.3;\",\n\n        \"float g_fMaxLuminance = 1.0;\",\n        \"float fLumScaled = 0.1 / luminance;     \",\n        \"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); \",\n\n        \"float ExposureBias = fLumCompressed;\",\n\n        \"vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\",\n        \"vec3 color = curr*whiteScale;\",\n\n        \"vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));\",\n\n        \"gl_FragColor.rgb = retColor;\",\n\n        \"gl_FragColor.a = 1.0;\",\n        \"}\",\n    ].join(\"\\n\"),\n};\n\nexport default skyshader;\n","// gradient sky shader\n\nconst gradientshader = {\n    schema: {\n        topColor: { type: \"color\", default: \"1 0 0\", is: \"uniform\" },\n        bottomColor: { type: \"color\", default: \"0 0 1\", is: \"uniform\" },\n    },\n\n    vertexShader: [\n        \"varying vec3 vWorldPosition;\",\n        \"void main() {\",\n        \" vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n        \" vWorldPosition = worldPosition.xyz;\",\n        \" gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\",\n        \"}\",\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n        \"uniform vec3 bottomColor;\",\n        \"uniform vec3 topColor;\",\n        \"uniform float offset;\",\n        \"varying vec3 vWorldPosition;\",\n        \"void main() {\",\n        \" float h = normalize( vWorldPosition ).y;\",\n        \" gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max(h, 0.0 ), 0.8 ), 0.0 ) ), 1.0 );\",\n        \"}\",\n    ].join(\"\\n\"),\n};\n\nexport default gradientshader;\n","/* global AFRAME, THREE */\nimport environment from \"./environment\";\nimport skyshader from \"./skyshader\";\nimport gradientshader from \"./gradientshader\";\n\nif (typeof AFRAME === \"undefined\") {\n    throw new Error(\"Component attempted to register before AFRAME was available.\");\n}\n\n/**\n * enviroGetSettings() - console function for printing out the current environment settings\n */\nconst enviroGetSettings = () => {\n    document.querySelector(\"[environment]\").components[\"environment\"].logPreset();\n};\n\nAFRAME.registerComponent(\"environment\", environment);\nAFRAME.registerShader(\"skyshader\", skyshader);\nAFRAME.registerShader(\"gradientshader\", gradientshader);\n\nconst el = document.getElementById(\"environment\");\nel.setAttribute(\"environment\", el.getAttribute(\"environment\") ?? { preset: \"forest\" });\n"],"names":["$c02888d1c1c60611$export$94132a0e348806d4","g","x","y","z","$c02888d1c1c60611$export$2c9e8a9632a706b2","a","b","t","$c02888d1c1c60611$export$cbea29d068a2e18f","$c02888d1c1c60611$export$4385e60b38654f68","$c02888d1c1c60611$export$7f7d45814fc23e4d","max","parseFloat","Math","sin","toString","substring","p","Array","fill","map","_","i","floor","$c02888d1c1c60611$export$d3022aad56692482","grad3","perm","X","Y","Z","gi000","gi001","gi010","gi011","gi100","gi101","gi110","gi111","n000","n100","n010","n110","n001","n101","n011","n111","u","v","w","nx00","nx01","nx10","nx11","nxy0","nxy1","$bfa9267d0244e05e$export$2e2bcd8739ae039","none","default","active","seed","skyType","skyColor","horizonColor","lighting","lightPosition","fog","flatShading","playArea","ground","groundYScale","groundTexture","groundColor","groundColor2","dressing","dressingAmount","dressingColor","dressingScale","dressingVariance","dressingUniformScale","dressingOnPlayArea","grid","gridColor","shadow","contact","egypt","checkerboard","forest","goaland","yavapai","goldmine","threetowers","poison","arches","tron","japan","dream","volcano","starry","osiris","moon","schema","oneOf","$d993782146de6f99$var$scaleDown","asset","geometry","type","vertices","$d993782146de6f99$export$2e2bcd8739ae039","faces","stones","torii","mirror","hexagons","towers","segments","trees","noise","apparatus","mushrooms","$d24c6f5b90e61df0$export$2e2bcd8739ae039","min","initGround","this","groundMaterial","document","createElement","setAttribute","classList","add","groundCanvas","groundGeometry","el","appendChild","updateGround","updateGeometry","visibleground","environmentData","THREE","PlaneGeometry","STAGE_SIZE","resolution","perlinSeed","verts","attributes","position","array","numVerts","length","inc","h","pow","random","xx","yy","pa","abs","computeVertexNormals","needsUpdate","normal","groundResolution","texRepeat","width","gridCanvas","height","gridTexture","Texture","wrapS","RepeatWrapping","wrapT","repeat","set","groundMaterialProps","emissive","Color","emissiveMap","shininess","MeshPhongMaterial","groundctx","getContext","gridctx","drawTexture","fillStyle","fillRect","drawGrid","mesh","Mesh","setObject3D","getObject3D","material","cast","receive","ctx","size","texMeters","col","col1","col2","im","imdata","numpixels","num","step","j","squareSize","numSquares","clone","addScalar","getHexString","getImageData","data","diff","r","rnd","putImageData","s","tex","texctx","walkers","lerp","push","it","walker","pos","drawImage","$b13a9a7238f7836f$export$2e2bcd8739ae039","initSky","sky","$75f878b07d0f473e$export$2e2bcd8739ae039","initStars","stars","createStars","BufferGeometry","positions","Float32Array","numStars","radius","Vector3","normalize","multiplyScalar","BufferAttribute","setDrawRange","PointsMaterial","color","Points","setStars","id","$536edcf936e05402$export$2e2bcd8739ae039","initDressing","updateDressing","Object3D","geoset","BoxGeometry","applyMatrix","Matrix4","makeTranslation","ConeGeometry","CylinderGeometry","getAssetGeometry","assets","geometries","geo","ds","dv","distance","direction","PI","matrix","scale","uniformScale","compose","cos","Quaternion","setFromAxisAngle","applyMatrix4","bufgeo","BufferGeometryUtils","mergeBufferGeometries","MeshLambertMaterial","self","applyNoise","i1","geo1","verts1","maxy","points","Vector2","LatheGeometry","makeRotationFromEuler","Euler","toNonIndexed","shape","Shape","moveTo","lineTo","ExtrudeGeometry","amount","bevelEnabled","setIndex","mirroredGeo","$2dd083d9aef8a0ea$export$2e2bcd8739ae039","initGrid","ii","l","jj","beginPath","arc","$26a1becb7665f029$export$2e2bcd8739ae039","initHemilight","hemilight","intensity","$bc1a19d16c553aee$export$2e2bcd8739ae039","initSunlight","sunlight","$ee9888388de04f30$export$2e2bcd8739ae039","preset","shadowSize","multiple","init","userFog","sceneEl","getAttribute","getFogColor","sunHeight","fogColor","fogRatios","fogColors","c1","c2","update","oldDataNonPreset","oldData","AFRAME","utils","extendDeep","Object","assign","presets","components","environment","attrValue","sunPos","skycol","castShadow","shadowCameraLeft","shadowCameraBottom","shadowCameraRight","shadowCameraTop","mat","shader","gradient","atmosphere","topColor","bottomColor","sunPosition","far","removeAttribute","updateGroundGeometry","dumpParametersDiff","logPreset","str","dec3","params","usingPreset","undefined","def","coords","split","$6e63277e9929640e$export$2e2bcd8739ae039","luminance","is","turbidity","reileigh","mieCoefficient","mieDirectionalG","vertexShader","join","fragmentShader","$59f1f51e77d39d2d$export$2e2bcd8739ae039","Error","registerComponent","registerShader","$35da740d59af89ba$var$el","getElementById"],"version":3,"file":"index.7226be7c.js.map"}